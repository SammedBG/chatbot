{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\My\\\\Desktop\\\\chatbot\\\\frontend\\\\chatbot-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State variables\n  const [messages, setMessages] = useState([]); // Stores chat history\n  const [input, setInput] = useState(''); // Stores user input\n\n  // Function to handle sending the message\n  const handleSend = () => {\n    if (input.trim()) {\n      // Add the user's message to the chat history\n      setMessages([...messages, {\n        sender: \"User\",\n        text: input\n      }]);\n\n      // Clear the input field\n      setInput(\"\");\n\n      // Placeholder for sending the input to the backend and receiving a response\n      // In a real app, you'd make an API call here.\n      setTimeout(() => {\n        setMessages(prevMessages => [...prevMessages, {\n          sender: \"Bot\",\n          text: \"This is a placeholder response from the bot.\"\n        }]);\n      }, 1000);\n    }\n  };\n\n  // Function to handle pressing \"Enter\" to send the message\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '600px',\n      margin: 'auto',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        borderRadius: '8px',\n        padding: '15px',\n        height: '400px',\n        overflowY: 'auto',\n        marginBottom: '20px'\n      },\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px',\n          textAlign: message.sender === 'User' ? 'right' : 'left'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [message.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), \" \", message.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type your message\",\n        style: {\n          flex: '1',\n          padding: '10px',\n          borderRadius: '4px',\n          bordear: '1px solid #ccc',\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        style: {\n          padding: '10px 20px'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","handleSend","trim","sender","text","setTimeout","prevMessages","handleKeyPress","event","key","style","padding","maxWidth","margin","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","border","borderRadius","height","overflowY","marginBottom","map","message","index","textAlign","display","type","value","onChange","e","target","onKeyPress","placeholder","flex","bordear","marginRight","onClick","_c","$RefreshReg$"],"sources":["C:/Users/My/Desktop/chatbot/frontend/chatbot-frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n    // State variables\n    const [messages, setMessages] = useState([]); // Stores chat history\n    const [input, setInput] = useState('');       // Stores user input\n\n    // Function to handle sending the message\n    const handleSend = () => {\n        if (input.trim()) {\n            // Add the user's message to the chat history\n            setMessages([...messages, { sender: \"User\", text: input }]);\n\n            // Clear the input field\n            setInput(\"\");\n\n            // Placeholder for sending the input to the backend and receiving a response\n            // In a real app, you'd make an API call here.\n            setTimeout(() => {\n                setMessages((prevMessages) => [\n                    ...prevMessages,\n                    { sender: \"Bot\", text: \"This is a placeholder response from the bot.\" }\n                ]);\n            }, 1000);\n        }\n    };\n\n    // Function to handle pressing \"Enter\" to send the message\n    const handleKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            handleSend();\n        }\n    };\n\n    return (\n        <div style={{ padding: '20px', maxWidth: '600px', margin: 'auto', fontFamily: 'Arial, sans-serif' }}>\n            <h2>AI Chatbot</h2>\n            \n            {/* Chat Messages */}\n            <div style={{\n                border: '1px solid #ccc',\n                borderRadius: '8px',\n                padding: '15px',\n                height: '400px',\n                overflowY: 'auto',\n                marginBottom: '20px'\n            }}>\n                {messages.map((message, index) => (\n                    <div key={index} style={{\n                        marginBottom: '10px',\n                        textAlign: message.sender === 'User' ? 'right' : 'left'\n                    }}>\n                        <strong>{message.sender}:</strong> {message.text}\n                    </div>\n                ))}\n            </div>\n            \n            {/* Input and Send Button */}\n            <div style={{ display: 'flex' }}>\n                <input\n                    type=\"text\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    onKeyPress={handleKeyPress}\n                    placeholder=\"Type your message\"\n                    style={{\n                        flex: '1',\n                        padding: '10px',\n                        borderRadius: '4px',\n                        bordear: '1px solid #ccc',\n                        marginRight: '10px'\n                    }}\n                />\n                <button onClick={handleSend} style={{ padding: '10px 20px' }}>Send</button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}